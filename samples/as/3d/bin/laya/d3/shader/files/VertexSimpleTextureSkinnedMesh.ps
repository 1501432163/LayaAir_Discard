precision mediump float;

uniform float u_Luminance;

#ifdef ALPHATEST
uniform float u_AlphaTestValue;
#endif

#ifdef DIFFUSEMAP
uniform sampler2D u_DiffuseTexture;
#endif

#ifdef DIFFUSEMAP||((DIRECTIONLIGHT||POINTLIGHT||SPOTLIGHT)&&COLOR&&SPECULARMAP)
varying vec2 v_Texcoord;
#endif


#ifdef COLOR
varying vec4 v_Color;
#endif

#ifdef DIRECTIONLIGHT||POINTLIGHT||SPOTLIGHT
varying vec3 v_Diffuse;
varying vec3 v_Ambient;
varying vec3 v_Specular;
 #ifdef SPECULARMAP
 uniform sampler2D u_SpecularTexture;
 #endif
#endif

#ifdef FOG
uniform float u_FogStart;
uniform float u_FogRange;
uniform vec3 u_FogColor;
varying float u_ToEyeLength;
#endif

#ifdef MIXUV
uniform float  u_UVAniAge;
#endif

void main()
{
 #ifdef DIFFUSEMAP&&!COLOR
   gl_FragColor=texture2D(u_DiffuseTexture, v_Texcoord);
 #endif 
 
 #ifdef COLOR&&!DIFFUSEMAP
  gl_FragColor=v_Color;
 #endif 
 
 #ifdef DIFFUSEMAP&&COLOR
   vec4 texColor=texture2D(u_DiffuseTexture, v_Texcoord);
   gl_FragColor=texColor*v_Color;
 #endif
 
 gl_FragColor.rgb=gl_FragColor.rgb*u_Luminance;
  
 #ifdef ALPHATEST
   if(gl_FragColor.a-u_AlphaTestValue<0.0)
    discard;
 #endif
  
 #ifdef DIRECTIONLIGHT||POINTLIGHT||SPOTLIGHT
  #ifdef SPECULARMAP&&(COLOR||DIFFUSEMAP)
  vec3 specular =v_Specular*texture2D(u_SpecularTexture,v_Texcoord).rgb;
  gl_FragColor =vec4( gl_FragColor.rgb*(v_Ambient + v_Diffuse)+specular,gl_FragColor.a);
  #else
  gl_FragColor =vec4( gl_FragColor.rgb*(v_Ambient + v_Diffuse)+v_Specular,gl_FragColor.a);
  #endif
 #endif
 
 #ifdef FOG
 float lerpFact=clamp((u_ToEyeLength-u_FogStart)/u_FogRange,0.0,1.0);
 gl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);
 #endif
}

